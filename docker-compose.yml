version: "3.7"

services:
  zookeeper:
    restart: always
    image: docker.io/bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    restart: always
    image: docker.io/bitnami/kafka:latest
    ports:
      - "9093:9093"
    volumes:
      - "kafka-volume:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper

  elasticsearch:
    restart: always
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
    restart: always
    image: docker.elastic.co/kibana/kibana:8.11.1
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  logstash:
    restart: always
    image: docker.elastic.co/logstash/logstash:8.11.1
    env_file:
      - .env
    ports:
      - "5000:5000"
      - "9600:9600"
    depends_on:
      - elasticsearch
      - kafka
    volumes:
      - "./logstash/pipeline:/usr/share/logstash/myPipeline"
      - "./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml"
      - "./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml"
 


volumes:
  kafka-volume:
  zookeeper-volume:
  elasticsearch-data:

